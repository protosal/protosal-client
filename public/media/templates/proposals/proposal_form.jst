<script type="text/template" id="proposal_form_template">
<div id="proposal_form_container">
    <form id="add_proposal_form"  class="edit_proposal_form" enctype="multipart/form-data" >
        <fieldset>
            <table>
                <tr>
                    <td>
                        <label for="">
                            Name</label>
                        <input name="name" id="" type="text" value="<%= typeof name != "undefined" ? name : "" %>" />
                    </td>
                    <td>
                        <label for="">
                            Client</label>
                        <div id="clients_combo_container"></div>
                    </td>
                    <td>
                        <label for="">
                            Autocomplete</label>
                        <input type="text" id="add_section_input" />
                    </td>
                </tr>
            </table>
            <input type="hidden" id="toc_order" name="toc_order" />
            </fieldset>

        </fieldset>
    </form>
    </div>
    <div id="sidemenu" style="position: absolute; top: 230; left: 50%; margin-left: 350px;">
    <a class="button delete ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button"><span class="ui-button-text">Table of Contents</span></a><br />
    <a class="button delete ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button"><span class="ui-button-text">Add Section</span></a><br />
    <a class="button delete ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button"><span class="ui-button-text">View PDF</span></a>
    hey bro you mad
    </div>
</div>
<jst>

    FeeModel = Backbone.Model.extend({
        initialize: function() {
            console.log("New Fee Model created");
        }
    });

    ClientModel = Backbone.Model.extend({
        initialize: function() {
            console.log("New Client Model created");
        }
    });
    SectionModel = Backbone.Model.extend({
        initialize: function() {
            console.log("New Section Model created");
        }
    });

    FeeCollection = Backbone.Collection.extend({
        model: FeeModel,
        initialize: function(){
            console.log("Initialize the Fee collection");
        }
    });
    ClientComboView = Backbone.View.extend({
        el: $("#clients_combo_container"),
        initialize: function(){
            
            
        },
        renderCombo: function(){
            var client_combo = this.view.el;
            this.client_id = proposal_view.client_id;
            client_combo.html( _.template( $("#clients_combo_form_element").html(), this ) );
        }
    });
    ClientCollection = Backbone.Collection.extend({
        model: FeeModel,
        initialize: function(){
            console.log("Initialize the Client collection");
            this.view = new ClientComboView;
            this.bind("refresh", this.view.renderCombo)
        },
        getAllClients: function(){
            console.log("Start fetching the clients");
            clients = {};
            $.when( $.ajax("list_by_author/client", { dataType: "json" }) )
                .then( function(data) {
                    //Update this clients
                    console.log("Clients received, send them to collection");
                    proposal_view.clients.refresh(data.rows);
            }); //When statement end
        }
    });

    SectionCollection = Backbone.Collection.extend({
        model: SectionModel,
        initialize: function(){
            console.log("Initialise the Section collection");
            this.bind("refresh", function() { proposal_view.addSectionRender(); });
            //this.bind("add", this.addEvent );

        },
        addToTOC: function(section) {
                proposal_view.toc.addSection(section);
        },
        getAllTemplates: function(){
            console.log("Start fetching the section templates");
            section_templates = {};
            $.when( $.ajax("list_by_author/section", { dataType: "json" }) )
                .then( function(data) {
                    //Update this collections sections
                    console.log("Template sections received, send them to collection");
                    proposal_view.allsections.refresh(data.rows);
            }); //When statement end
        }
    });
    SectionsView = Backbone.View.extend({

    });
    TOCView = Backbone.View.extend({
        el: $("#proposal_preview_toc"),
        initialize: function(){
            console.log("Initialize the table of contents");
        },
        addSection: function( section ){
            console.log("Add section to the ordered list");
            console.log(this);
            $("#toc_list").append( _.template( $("#toc_list_item").html(), section.get("value") ) );
            $("#toc_list").sortable({
                update: proposal_view.toc.updateOrder
            }); 
            proposal_view.toc.updateOrder();
        },
        updateOrder: function(){
            sections = $("#toc_list").sortable('toArray').toString();
            console.log("Update order of sections");
            console.log(sections);
            $("#toc_order").val( sections );
        }
    });
    ClientsView = Backbone.View.extend({
        el: $("#clients_combo"),
        initialize: function(){
            console.log("Initializing the clients view");
            
        }
    
    });
    ProposalView = Backbone.View.extend({
    
        el: $("#proposal_form_container"),
        sections: null,
        fees: null,
        toc: null,
        allsections: null,
        clients: null,
        client_id: "<%= typeof client_id != 'undefined' ? client_id : '' %>",
        
        initialize: function(){
            console.log("Initialize the proposal view");
            $("body").append("<div style='' class='proposalcontainer proposal_preview container'>Yo</div>");
            $(".proposalcontainer").html( _.template( $("#proposal_preview").html(), {} ) );
            $.when( this.get_id() ).then( $.proxy( function(){
                console.log(arguments);
                console.log("Get the proposal id");
                
                this.sections = new SectionCollection;
                this.sections.bind("add", this.sections.addToTOC);

                this.allsections = new SectionCollection;
                this.allsections.getAllTemplates();

                this.clients = new ClientCollection;
                this.clients.getAllClients();
                console.log(this.clients);
                this.fees = new FeeCollection;
            
                this.toc = new TOCView;

            }, this)

            )
        },
        addSectionRender: function(){
            console.log( "Render the add section auto complete" );
            var sections = this.allsections.models;
            console.log( "Map the sections to return values that the auto complete plugin can use" );
            sections = _.map( sections, function( section ){
                section = section.get("value");
                return {
                    "id" : section._id,
                    "label" : section.name,
                    "value" : section.name,
                    "rev" : section._rev,
                };
            }); //Map function end
            console.log( "Mapped sections: " + sections.length );
            $("#add_section_input").autocomplete({
                        source: sections,
                        minLength: 1,
                        delay: 0,
                        select: function( event, ui ) {
                            console.log("TODO - Instantiate a new section and return the id");
                            function getInstance(){
                                    return $.Deferred(function(dfd){
                                        var instance = proposal_view.allsections.get( ui.item.id ).clone();
                                        instance.set({ "id": "newid" });
                                        console.log("Changed id of the new instance");
                                        dfd.resolve( instance );
                                    }).promise();

                            }
                            $.when( getInstance() )
                            .then( function( section_instance) {
                                    console.log( "Section instantiated with id " + section_instance);
                                    proposal_view.sections.add(section_instance);
                            });
                            $( this ).val("").focus();
                            return false;
                        }
            }); //Auto complete end
        },
        get_id: function(){
            if( GLOBALS.route_id == "" ){
                // Get the empty form fields and serialize them so we can insert into the database
                formdata = $(".edit_proposal_form").serializeObject();
                // Add the type of form to the form object
                formdata.type = "proposal";

                return $.ajax( "data", {
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json",
                        data: $.toJSON(formdata),
                        success: function(resp){
                            //Unbind the default click handler and attach a new one now that we have created a new proposal
                            $('.proposal_save').unbind('click');
                            $(".proposal_save").click({
                                _rev: resp.rev,
                                _id: resp.id,
                                success: <%= success %>
                            }, window.saveclickHandler );
                        }
                    });
            }  else {
                return { id: GLOBALS.route_id };
            }
        }
    });

    proposal_view = new ProposalView;
</jst>
</script>
<script type="text/template" id="toc_list_item">
    <li id="<%= _id %>"><%= name %></li>
</script>
<script type="text/template" id="clients_combo_form_element">
    <select name="client_id">                $("body").append("<div style='' class='proposalcontainer proposal_preview container'>Yo</div>");
                $(".proposalcontainer").html( _.template( $("#proposal_preview").html(), {} ) );
    <option value="">Select Client</option>
    <% _.each( models, function( clientmodel) { 
            selected = "";
            clientmodel = clientmodel.get("value");
            if( client_id == clientmodel._id) {
                selected = "selected";
            }
        %>
        <option value="<%= clientmodel._id %>" <%= selected %>><%= clientmodel.name %></option>
        <% });%>
    </select>
</script>
<script type="text/template" id="proposal_preview">
            <div class="header">
				<div class="details">
					<strong>Consultants (NQ) Pty LTD</strong><br />
					Building Services Consulting Engnieers<br />
					<br />
					<strong>Ph</strong>: (07) 4030 1000<br /> 
					<strong>Fx</strong>: (07) 4723 1780
				</div>
				<div class="userlogo">
				<img src="/media/userimages/logo.jpg" />
				</div>
				
			</div>
			<br />
			
			<br />
			<h2>Sample Proposal - Waterworks</h2>
			<h2 class="company">Sample Company</h2>
			<br />
			<p class="introduction">A This is a short but effective proposal template for a website redesign project. It clearly outlines the business challenges the client faces, how these challenges will be taken care of, and what the client must do to get the project started.</p>
			<br />
			<div class="section">
				<h3 class="section_heading">Table of contents</h3>
			    <div id="proposal_preview_toc">
			        <ol id="toc_list"></ol>
			    </div>
			</div>

			<div class="section_container">
				<div class="section">
					<h3 class="section_heading">Overview</h3>
					<div class="section_content">
					This is a short but effective proposal template for a website redesign project. It clearly outlines the business challenges the client faces, how these challenges will be taken care of, and what the client must do to get the project started.
					</div>
				</div>
				
				<div class="section">
					<h3 class="section_heading">Terms of Reference</h3>
					<div class="section_content">
						An Example of a bulleted list in the editor:-
						<ul>
							<li>Web Design</li>
							<li>Brick Designs</li>
							<li>Tailored Fingernails</li>
							<li>Obese Training</li>
						</ul>
					</div>
				</div>
				
				<div class="section">
					<h3 class="section_heading">Section with a Fee</h3>
					<div class="section_content">
						This section is an example of what a section with a fee table looks like.  This is going to be tricky but we can do it. Because we da best.
						<table>
							<tr>
								<td>Fee</td>
								<td>Price</td>
							</tr>
							<tr>
								<td>Web Design</td>
								<td>$100</td>
							</tr>
						</table>
					</div>
				</div>
				
				<div class="section">
					<h3 class="section_heading">Conclusion</h3>
					<div class="section_content">
						This agreement becomes effective only when signed by agents of Sample client Company and tyth.  This is the conclusion you better believe it.
					</div>
				</div>
			</div>
</script>
