<script type="text/template" id="proposal_form_template">
<div id="proposal_form_container">
    <form id="add_proposal_form"  class="edit_proposal_form" enctype="multipart/form-data" >
        <fieldset>
            <table>
                <tr>
                    <td style="padding-left: 20px;">
                        <label for="">
                            Name</label>
                        <input name="name" id="proposal_name" type="text" value="<%= typeof name != "undefined" ? name : "" %>" />
                    </td>
                    <td style="padding-left: 20px;">
                        <label for="">
                            Client</label>
                        <div id="clients_combo_container"></div>
                    </td>
                    <td style="padding-left: 20px;">
                        <label for="">
                            Status</label>
                    	<div id="radio">
                    	
		                <input type="radio" id="radio1" name="status" value="pending" /><label for="radio1">Pending</label>
		                <input type="radio" id="radio2" name="status" value="accepted" /><label for="radio2">Accepted</label>
		                <input type="radio" id="radio3" name="status" value="declined" /><label for="radio3">Declined</label>
	                    </div>
	                </td>
                </tr>
            </table>
            <input style="width: 800px; font-size: 9px" type="hidden" id="toc_order" name="toc_order" />
            </fieldset>

        </fieldset>
    </form>
    </div>
    <div id="sidemenu" style="">
    Editing
    <a id="side_add_section" class=" ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button"><span class="ui-button-text">Add Section</span></a><br />
    <br />
    Finished
    <a id="side_print_preview" editing="true" class="button  ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button"><span class="ui-button-text">Print Preview</span></a><br />
    <a id="side_view_pdf" class="button  ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button"><span class="ui-button-text">View PDF</span></a>
    <textarea id="pdfcrowd"></textarea>
    </div>
</div>
<div id="section_chooser_container" style="display:none;">
    <div class="ui-widget-header">
        <h3 style="text-shadow: 0 1px 0 rgba(255, 255, 255, 0.6);float: left;">Add Sections</h3>
            <a class="add_sections button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" style="float:right;"><span class="ui-button-text">Add to Proposal</span></a><br />
        <div style="clear:both;"></div>
    </div>
    <ul></ul>
    <div id="atestform" class="modal_window">

</div>
</div>
<jst>
    
    FeeModel = Backbone.Model.extend({
        initialize: function() {
            console.log("New Fee Model created");
        }
    });

    ClientModel = Backbone.Model.extend({
        initialize: function() {
            console.log("New Client Model created");
        }
    });


    FeeCollection = Backbone.Collection.extend({
        model: FeeModel,
        initialize: function(){
            console.log("Initialize the Fee collection");
        }
    });
    ClientComboView = Backbone.View.extend({
        el: $("#clients_combo_container"),
        initialize: function(){
            
            
        },
        renderCombo: function(){
            var client_combo = this.view.el;
            this.client_id = proposal_view.client_id;
            client_combo.html( _.template( $("#clients_combo_form_element").html(), this ) );
        }
    });
    ClientCollection = Backbone.Collection.extend({
        model: FeeModel,
        initialize: function(){
            console.log("Initialize the Client collection");
            this.view = new ClientComboView;
            this.bind("refresh", this.view.renderCombo)
        },
        getAllClients: function(){
            console.log("Start fetching the clients");
            clients = {};
            $.when( $.ajax("list_by_author_templates/client", { dataType: "json" }) )
                .then( function(data) {
                    //Update this clients
                    console.log("Clients received, send them to collection");
                    proposal_view.clients.refresh(data);
            }); //When statement end
        }
    });
    SectionModel = Backbone.Model.extend({
        initialize: function() {
            console.log("New Section Model created");
        }
    });
    SectionCollection = Backbone.Collection.extend({
        model: SectionModel,
        initialize: function(){
            console.log("Initialise the Section collection");
            //this.bind("refresh", function() { proposal_view.addSectionRender(); });
            //this.bind("add", this.addEvent );
			this.bind("remove", this.deleteRelation );
        },
        deleteRelation: function( model ){
			console.log("delete triggered");
			console.log(model);
			id = model.id;
			proposalid = proposal_view.proposalid;
			$.ajax("delete/proposal_section/" + proposalid + "/" + id, 
			{ type: "DELETE",
				success: function( resp ) {
				}
			})
		},
        addToPreview: function(section) {
            console.log("adding to preview");

            console.log(section);
            proposal_view.toc.addSection(section);
            proposal_view.section_container.addSection(section);
        },
        getAllTemplates: function(){
            console.log("Start fetching the section templates");
            section_templates = {};
            $.when( $.ajax("list_by_author_templates/section", { dataType: "json" }) )
                .then( function(data) {
                    //Update this collections sections
                    console.log("Template sections received, send them to collection");
                    proposal_view.allsections.refresh(data);
            }); //When statement end
        },
        getRelated: function(){
            console.log("Get related sections")
            var that = this;
            console.log("get related that");
            console.log(that);
            $.ajax({
                url: "related2/proposal_section/" + that.proposalid,
                success: function(resp){
                    console.log("Found related sections");
                    console.log(resp);
                    
                    var toc_order = "<%= typeof toc_order != "undefined" ? toc_order : "" %>";
                    var sorted = _.sortBy( resp, function( row ) { return toc_order.indexOf(row.value._id); } );
                    _.each( sorted, function(model) {
                        model.value.id = model.value._id;
                        that.sections.add(model.value)
                    })
                }
            })
            
        }
    });
    FeeTableView = Backbone.View.extend({
        initialize: function( section ){
            console.log("build the table");
            console.log(section);
            var feelist = section.get("feelist").split(",");
            var obj = {
                   keys: feelist
            };
            if( obj.keys != "" ){
                $.when( $.ajax("data/bulk_docs", { type: "post", dataType: "json", contentType: "application/json", data: $.toJSON(obj) }) )
                .then( function(data) {
                    //Update this collections sections
                    console.log("received fee data");
                    $(".section_table", $(".section_" + section.cid) ).html( _.template( $("#section_fee_table_template").html(), { fees: data} ) );
                    proposal_view.applyVariables( $(".section_" + section.cid) );
                }); //When statement end
            } else {
                $(".section_table", $(".section_" + section.cid) ).html("");
                
            }
            
        }
    })
    SectionsContainer = Backbone.View.extend({
        el: $("#section_container_test"),
        initialize: function(){
            console.log("Iniitalize sections container");
            console.log(this.el)
            $(".cid").die( "click" );
            $(".cid").live( "click", this.openEdit );
            $(".delete_section").live( "click", this.deleteSection );
        },
        deleteSection: function( event ) {
			cid = $(event.currentTarget).parents("li").attr("cid");
			model = proposal_view.sections.getByCid(cid);
			id = model.get("id");
			proposal_view.sections.remove(model);
			$("#" + id ).remove();
			$("li[cid='" + cid + "']").remove();
            proposal_view.toc.updateOrder();
			return false;
		},
        addSection: function( section ){
            console.log("Add to sections container")
            console.log($("#proposal_preview_section").html())
            if( typeof section.attributes.description != "undefined" ) {
                 $("#section_container_test ol").append( _.template( $("#proposal_preview_section").html(), { section: section } ) );
                 var feetable = new FeeTableView( section );
                $(".section_content", ".section_" + section.cid).html( _.template( $("#proposal_preview_section_content").html(), section.attributes ) );
                proposal_view.applyVariables( ".section_" + section.cid );
            } else {
                $("#section_container_test ol").append( _.template( $("#proposal_preview_section").html(), { section: section } ) );
                $.ajax({
                    url: "data/newinstance/" + proposal_view.proposalid + "/" + section.get("template_id"),
                    success: function( response ){
                        $(".section_content", ".section_" + section.cid).html( _.template( $("#proposal_preview_section_content").html(), response ) );
                        section.set({ id: response._id});
                        section.set(response);
                        var feetable = new FeeTableView( section );
                        $("li[id='" + section.cid + "']").attr("id", response._id);
                        proposal_view.toc.updateOrder();
                        proposal_view.applyVariables( ".section_" + section.cid );
                    }
                });
            }
        },
        openEdit: function( event ) {   
            sectionEl = $(event.currentTarget);
            cid = sectionEl.attr("cid");
            template_id = sectionEl.attr("template_id");
            section = (proposal_view.sections.getByCid(cid));
            console.log("opening edit screen")
            console.log(section)
            $("#atestform").html(" ");
            var temp = $("#atestform");
            temp.hide();
            $("body").append(temp);
             
            _.jstTemplate( temp, $("#common_edit_view_template"), { 
                controller: "section",
                documentid: section.get("_id"),
                templateid: template_id,
                modal: "yes",
                success: function(data){
         
                     $("#atestform").dialog("close");
                         $.ajax({
                            url: "data/" + section.id,
                            success: function( response ){section_fee_table_template
                                $(".section_content", ".section_" + cid).html( _.template( $("#proposal_preview_section_content").html(), response ) );
                                $(".section_heading", ".section_" + cid).text(response.name);
                                $("#"+section.id).text(response.name); // set the toc name
                                section.set(response);
                                var feetable = new FeeTableView( section );
                                proposal_view.applyVariables( ".section_" + cid );
                            }
                        });
                }
            });    
            var mydialog = $(temp).dialog({
		        autoOpen: false,
                draggable: false,
                resizable: false,
                closeOnEscape: true,
                close: function(){
				     
			        mydialog.dialog("destroy");
			
                },
                beforeClose: function(){
				    killck();
                    console.log(cked);
				
		        },
                open: function(){
			        $("form input").focus();      
                },
                modal: true, 
                hide: 'drop',
                width: "960px",
                position: ["50%",100],
                height: "500"
            }).dialog("open");
        }
    });
    SectionChooser = Backbone.View.extend({
        el: $("body"),
        activemodal: null,
        selectedSections: null,
        initialize: function(){
    
        },
        events: {
            "click .section_list_item":    "toggleTick",  
            "click .add_sections":         "addToPreview"
        },
        toggleTick: function(event){
            
            list_item = $(event.currentTarget);
            tick = $(".tick", list_item);
            if( tick.hasClass("ticked") ){
                tick.removeClass("ticked")
            } else{
                tick.addClass("ticked")
            }
            
        },
        addToPreview: function(){
            $(".section_temp li").each( function(){
                if( $(".tick", this).hasClass("ticked") ){
                    proposal_view.sections.add( { template_id: $(this).attr("section_id") , name: $(this).text() }  );
                }    
            })
            this.activemodal.dialog("destroy");
            $(".section_temp").remove();
        },
        renderList: function( sections ){
        
                    
            this.activemodal = $("<div class='section_temp'>").html( _.template( $("#section_chooser_list_template").html(), {sections: sections} ) )
            
            this.activemodal.dialog({
                autoOpen: false,
                draggable: false,
                resizable: false,
                closeOnEscape: false,
                title: "New Fee",
                modal: true, 
                hide: 'drop',
                width: "550px",
            }); 
                
            this.activemodal.dialog("open");
            console.log("Dialog created")
            
        }
    
    })
    TOCView = Backbone.View.extend({
        el: $("#proposal_preview_toc"),
        initialize: function(){
            console.log("Initialize the table of contents");
        },
        addSection: function( section ){
            console.log("Add section to the ordered list");
            console.log(this);
            $("#toc_list").append( _.template( $("#toc_list_item").html(), { section: section } ) );
            $("#toc_list").sortable({
                update: function(event, ui) {
                    console.log(arguments);
                proposal_view.toc.updateOrder(event, ui)
                }
            }); 
            // If this item is being added at page load don't do that shit above
            proposal_view.toc.updateOrder();
            proposal_view.applyVariables( "#toc_list" );
        },
        updateOrder: function(event,ui){
            if( typeof ui != "undefined") {
                
                listitem = $(ui.item[0]);
                console.log("hey")
                console.log(listitem)
                console.log($("#toc_list"));
                position = ($("#toc_list li").index(listitem)) + 1;
                cid = proposal_view.sections.get($(listitem).attr("id")).cid;
                sec = $(".proposal_preview #section_container_test li.cid:nth-child("+position+")");
                if( $(".proposal_preview #section_container_test li.cid:last").text() == sec.text() ){
                    sec.after($(".section_"+cid))
                } else {
                    sec.before($(".section_"+cid))
                }
                
            }
            sections = $("#toc_list").sortable('toArray').toString();
            console.log("Update order of sections");
            console.log(sections);
            $("#toc_order").val( sections );
        }
    });
    ClientsView = Backbone.View.extend({
        el: $("#clients_combo"),
        initialize: function(){
            console.log("Initializing the clients view");
                        $.when( $.ajax("list_by_author_templates/section", { dataType: "json" }) )
                .then( function(data) {
                    //Update this collections sections
                    console.log("Template sections received, send them to collection");
                    proposal_view.allsections.refresh(data);
            }); //When statement end
        }
    
    });
    SideMenu = Backbone.View.extend({
        el: $("#sidemenu"),
        events: {
            "click #side_add_section": "openModal",
            "click #side_print_preview": "printPreview",
            "click #side_view_pdf": "openPdf"
            
        },
        openModal: function(){
            proposal_view.addSectionRender();
            
        },
        printPreview: function(event){
            button = $(event.currentTarget);
            if( $(button).attr("editing") == "true" ){
                $("span", button).text("Back to editing");
                $(button).addClass("ui-state-active");
                $("#proposal_editing").attr("href", "");
                $(button).attr("editing","false");
            } else {
                $("span", button).text("Print Preview");
                $(button).removeClass("ui-state-active");
                $("#proposal_editing").attr("href", "/media/css/proposal_editing.css");
                $(button).attr("editing", "true");
            }
            
        },
        openPdf: function(){
            
            html = $("#proposal_preview_container").html();
            css = $("#proposal_css").val();
            $("#pdfcrowd").text(css + html);
        }
    });
    
    ProposalView = Backbone.View.extend({
    
        el: $("#proposal_form_container"),
        sections: null,
        fees: null,
        toc: null,
        allsections: null,
        clients: null,
        client_id: "<%= typeof client_id != 'undefined' ? client_id : '' %>",
        client: null,
        initialize: function(){
            var that = this;
            console.log("Initialize the proposal view");
            $("body").append("<div id='proposal_preview_container'><div style='' class='proposalcontainer proposal_preview container'>Yo</div></div>");

            $.when( this.get_id() ).then( $.proxy( function(data){
                $(".proposalcontainer").html( _.template( $("#proposal_preview").html(), { name: $("#proposal_name").val() } ) );
                console.log(arguments);
                console.log("Get the proposal id");
                that.proposalid = data.id;
                
                if( "<%= typeof client_id != 'undefined' ? client_id : '' %>" != "" ){
                    $.ajax( "data/<%= typeof client_id != 'undefined' ? client_id : '' %>" ,{
                        dataType: "json",
                        success: function(data){
                            that.client = data;
                            that.applyVariables( ".proposal_view" )
                        }
                    })
                }
                
                this.sections = new SectionCollection;
                
                this.sections.bind("add", this.sections.addToPreview);
                this.sections.getRelated.apply(this);
                
                this.allsections = new SectionCollection;
                this.allsections.getAllTemplates();

                this.clients = new ClientCollection;
                this.clients.getAllClients();
                console.log(this.clients);
                this.fees = new FeeCollection;
            
                this.toc = new TOCView;
                this.section_container = new SectionsContainer;
                this.sidemenu = new SideMenu;
                this.section_chooser = new SectionChooser;
                
            }, this)

            )
        },
        events: {
            "keyup #proposal_name": "updatePreview", //Wrong should update model and model should listen for changes
            "change #client_combo": "updateClientData"
        },
        getClientData: function(){
            
        },
        updatePreview: function( event ){
            $("#preview_proposal_name").text($(event.currentTarget).val())  
        },  
        updateClientData: function( event ){
            id = $(event.currentTarget ).val();
            if( id != ""){
                $.when( $.ajax("data/" + id ) )
                .then( function(data) {
                    proposal_view.client = data
                    proposal_view.applyVariables( ".proposal_preview" );
                }); //When statement end
            } else {
                
                    proposal_view.client = null;
                    proposal_view.applyVariables( ".proposal_preview" );
            }
        },
        getVariables : function(){
            var  variables = {};
            proposal_details = {
                proposal_name: $("#preview_proposal_name").text()
            }
            variables = _.extend(variables, proposal_details);
            variables = _.extend(variables, proposal_view.client);
            return variables;
        },
        applyVariables: function( element ) {
                var variables = proposal_view.getVariables();
                    $(".variable", $(element) ).each(function(index){
                        console.log(this)
                        $(this).after("{{" + $(this).attr("name") + "}}");
                        $(this).remove();
                    })
                    $(".empty_variable", $(element) ).each(function(index){
                        console.log(this)
                        $(this).after("{{" + $(this).attr("name") + "}}");
                        $(this).remove();
                    })
                    var previewhtml = $(element).html();
                    var matches = previewhtml.match(/\{\{([^}]+)\}\}/g);
                    for (i in matches) {
                        variable = matches[i].substr(2, matches[i].length-4);
                        if( typeof variables[variable] != "undefined"){
                            if( variables[variable] != "") {
                                 previewhtml = previewhtml.replace(matches[i],"<span class='variable' name='"+variable+"'>"+variables[variable]+"</span>");
                            } else {
                               previewhtml = previewhtml.replace(matches[i],"<span class='empty_variable' name='"+variable+"'>{&#123;"+variable+"}}</span>"); 
                            }
                        }  else {
                            previewhtml = previewhtml.replace(matches[i],"<span class='empty_variable' name='"+variable+"'>{&#123;"+variable+"}}</span>");
                        }
                    }
                    $(element).html(previewhtml);
                        $("#toc_list").sortable({
                            update: function(event, ui) {
                                console.log(arguments);
                            proposal_view.toc.updateOrder(event, ui)
                            }
                        }); 
        },
        addSectionRender: function(){
            console.log( "Render the add section modal window" );
            var sections = this.allsections.models;
            // Now that we have all the section templates, populate the section choose
            proposal_view.section_chooser.renderList(sections);

        },
        get_id: function(){
            if( GLOBALS.route_id == "" ){
                // Get the empty form fields and serialize them sresponseo we can insert into the database
                formdata = $(".edit_proposal_form").serializeObject();
                // Add the type of form to the form object
                formdata.type = "proposal";
                formdata.template = true;
                return $.ajax( "data", {
                        dataType: "json",
                        type: "POST",
                        contentType: "application/json",
                        data: $.toJSON(formdata),
                        success: function(resp){
                            //Unbind the default click handler and attach a new one now that we have created a new proposal
                            $('.proposal_save').unbind('click');
                            $(".proposal_save").click({
                                templateid: "",
                                _rev: resp.rev,
                                _id: resp.id,
                                success: <%= success %>
                            }, window.saveclickHandler );
                        }
                    });
            }  else {
                return { id: GLOBALS.route_id };
            }
        }
    });
    proposal_view = new ProposalView;
  
    $( "#radio" ).buttonset();
    thechecked = "<%= typeof status != "undefined" && status != "" ? status : 'pending' %>";
    $("input[value='"+thechecked+"']").attr("checked", "checked")
    
    $( "#radio" ).buttonset('refresh');
</jst>
</script>
<script type="text/template" id="toc_list_item">
    <li id="<%= typeof section.id != "undefined" ? section.id : section.cid %>" template_id="<%= section.get("template_id") %>"><%= section.get("name") %></li>
</script>
<script type="text/template" id="clients_combo_form_element">
    <select name="client_id" id="client_combo">                
    <option value="">Select Client</option>
    <% _.each( models, function( clientmodel) { 
            selected = "";
            clientmodel = clientmodel.get("value");
            if( typeof client_id == "undefined") {
                client_id = "";
            }
            if( client_id == clientmodel._id) {
                selected = "selected";
            }
        %>
        <option value="<%= clientmodel._id %>" <%= selected %>><%= clientmodel.name %></option>
        <% });%>
    </select>
</script>
<script type="text/template" id="section_chooser_list_template">
    <div class="ui-widget-header">
        <h3 style="text-shadow: 0 1px 0 rgba(255, 255, 255, 0.6);float: left;">Add Sections</h3>
            <a class="add_sections button ui-button ui-widget ui-state-default ui-corner-all ui-button-text-only" role="button" style="float:right;"><span class="ui-button-text">Add to Proposal</span></a><br />
        <div style="clear:both;"></div>
    </div>
    <ul>
        <li class="section_list_item" style="margin-bottom: 25px;"><i>New Empty Section</i><div class="tick"></div></li>
        <% _.each( sections, function(section) {
        section = section.get("value");
        %>
            <li class="section_list_item" section_id="<%= section._id %>"><%= section.name %><div class="tick"></div></li>
        <% }); %>
    </ul>
    </div>
</script>
<script type="text/template" id="proposal_preview_section">
    <li class="section_<%= section.cid %> cid" cid="<%= section.cid %>" template_id="<%= section.get("template_id") %>">
        <div class="section">
            <h3 class="section_heading"><%= section.get("name") %></h3>
            <div class="section_content">
                    <div class='loading' style="width: 32px; margin-left: 30px; margin-top: 10px;"> </div>
            
            </div>
            <div class="section_table">
            No fees
            </div>
        </div>
        
        <div class="delete_section">Delete</div>
    </li>
</script>
<script type="text/template"" id="section_fee_table_template">
<table id="hor-minimalist-b">
    <thead>
        <tr>
            <th>Fee Name</th>
            <th>Fee Price</th>
        </tr>
    </thead>
    <tbody>
        <% _.each( fees, function(fee) { %>
            <tr>
                <td><%= fee.doc.name %></td>
                <td><%= fee.doc.price %></td>
            </tr>
        <% }); %>
    </tbody>
</table>
</script>
<script type="text/template" id="proposal_preview_section_content">
        <div class="section_content">
                <%= typeof description != "undefined" ? description : "" %>
        </div>
</script>
<script type="text/template" id="proposal_preview">
            <div class="header">
                <div class="details">
                    <strong>Consultants (NQ) Pty LTD</strong><br />
                    Building Services Consulting Engnieers<br />
                    <br />
                    <strong>Ph</strong>: (07) 4030 1000<br /> 
                    <strong>Fx</strong>: (07) 4723 1780
                </div>
                <div class="userlogo">
                <img src="http://protosal.com/logo.jpg" />
                </div>
                
            </div>
            <br />
            
            <br />
            <h2 id="preview_proposal_name"><%= name %></h2>
            <h2 class="company">Sample Company</h2>
            <br />
            <p class="introduction">A This is a short but effective proposal template for a website redesign project. It clearly outlines the business challenges the client faces, how these challenges will be taken care of, and what the client must do to get the project started.</p>
            <br />
            <div class="toc">
                <h3 class="section_heading">Table of contents</h3>
                <div id="proposal_preview_toc">
                    <ol id="toc_list"></ol>
                </div>
            </div>

            <div id="section_container_test">
                <ol></ol>
            </div>
            
            <textarea id="proposal_css" style="display: none;">
            <style>
.proposal_preview {
	z-index: 1;
	top: 222px;
	width: 705px;
	padding: 25px 35px 25px 35px;
	color: #444;
}
.proposal_preview .header {
    height: 100px;
    padding-bottom: 0px;
    border-bottom: 1px solid #ccc;
    margin-bottom: 30px;
}
.proposal_preview h2 {
    font-size: 1.8em;
    line-height: 1.2;
}
.proposal_preview h2.company {
    font-size: 1.4em;
    color: #555;
}
.proposal_preview .userlogo {
    height: 90px;
    float: right;
    width: 200px;
    margin-top: -15px;
    
}
.proposal_preview .details {
    float: left;
    font-size: 1em;
    line-height: 1.1em;
}

.proposal_preview .introduction {
    font-size: 1em;
}

.proposal_preview .section_container{ 
    margin-top: 50px;
}
.proposal_preview .section_heading.toc{
	font-size: 1.7em;
}
.proposal_preview .toc {
	margin-top: 50px;
	margin-bottom: 50px;
	
}
.proposal_preview .toc ol{
	margin-left: 75px;
	margin-top: 20px;
}
.proposal_preview .toc ol li{
	font-size: 1.3em;
	cursor: pointer;
	width: 590px;
}
.proposal_preview .toc ol li:hover{
	background: #ffffcc url(../icons/direction.png) no-repeat right;
}
.proposal_preview .section {
    margin-bottom: 30px;
}
.proposal_preview .section h3 {
    font-size: 1.2em;opment {{name}}
Web Development

    line-height: 1.9em;
}
.proposal_preview .section_content {
    font-size: 1em;
    padding-left: 10px;
}
.proposal_preview .section_content ul {
    padding: 15px 0 0 40px;
    line-height: 28px;
    margin-left: 100px;
}

.section_temp ul {
	
	list-style: none;
	width: 450px;
	margin: auto;
	margin-top: 20px;
	margin-bottom: 20px;
	height: 400px;
	overflow: auto;
}
.section_list_item {
	cursor:pointer;
	height: 25px; 
	border-bottom: 1px dashed #ebebeb;
	padding: 2px;
	font-size: 1.3em;
}
#hor-minimalist-b
{
	font-size: 12px;
	margin: 45px;
	margin-left: 90px;
	width: 480px;
	border-collapse: collapse;
	text-align: left;
}
#hor-minimalist-b th
{
	font-size: 14px;
	font-weight: normal;
	color: #039;
	padding: 10px 8px;
	border-bottom: 2px solid #6678b1;
}
#hor-minimalist-b td
{
	border-bottom: 1px solid #ccc;
	color: #669;
	padding: 6px 8px;>
}
#hor-minimalist-b tbody tr:hover td
{
	color: #009;
}









</style>
</textarea>

        <div style="clear: both;"></div>
        <div style="clear: both;"></div>
</script>
